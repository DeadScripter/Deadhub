--// ðŸŸ¥ðŸ–¤ DEAD SCRIPT KEY SYSTEM WITH PIXEL ANIMATED BACKGROUND + PREMIUM SUPPORT + ALWAYS VALIDATE + HWID LOCK ðŸ–¤ðŸŸ¥

local player = game:GetService("Players").LocalPlayer
local guiService = game:GetService("CoreGui")
local HttpService = game:GetService("HttpService")

-- File for storing saved key data
local STORAGE_FILE = "DeadHubKeyData.json"
local HWID = game:GetService("RbxAnalyticsService"):GetClientId()
local WEBHOOK_URL = "https://discord.com/api/webhooks/1405050769861771347/YhzHGa4WE_slSAJcPE2xP5Y7GwjKRHXi4YTByeX1cZQfzcUtt6lx9KBTN3pFi_ICWese"

-- Save key data
local function saveKeyData(data)
    writefile(STORAGE_FILE, HttpService:JSONEncode(data))
end

-- Load key data
local function loadKeyData()
    if isfile(STORAGE_FILE) then
        return HttpService:JSONDecode(readfile(STORAGE_FILE))
    end
    return {}
end

-- Get latest keys from bot / GitHub
local function getLatestKeysFromBot()
    local success, result = pcall(function()
        local json = game:HttpGet("https://raw.githubusercontent.com/scriptholder/Blah/refs/heads/main/Keysystem.json")
        return HttpService:JSONDecode(json)
    end)
    if success and type(result) == "table" then
        return result.freeKey or "Dead", result.premiumKeys or {}
    else
        warn("[DeadHub] Failed to fetch latest keys, using fallback.")
        return "Dead", { ["PremiumKey123"] = {durationDays = 7} }
    end
end

-- Load saved key & fetch latest key
local keyData = loadKeyData()
local latestKey, premiumKeys = getLatestKeysFromBot()

-- Always validate against the latest key (ignore old saved key if different or expired)
local function isKeyValid(data)
    if not data.key then return false end
    if data.key == latestKey and not data.isPremium then
        return true
    end
    if data.isPremium and premiumKeys[data.key] then
        if premiumKeys[data.key].hwid and premiumKeys[data.key].hwid ~= HWID then
            return false
        end
        if data.expireTime and os.time() < data.expireTime then
            return true
        end
    end
    return false
end

-- If not valid, show UI
if not isKeyValid(keyData) then
    for _, v in pairs(guiService:GetChildren()) do
        if v.Name == "KeySystem" or v.Name == "DeadSplash" then
            v:Destroy()
        end
    end

    local font = Enum.Font.Arcade
    local color1 = Color3.fromRGB(255, 0, 0)

    local keyUI = Instance.new("ScreenGui", guiService)
    keyUI.Name = "KeySystem"
    keyUI.ResetOnSpawn = false
    keyUI.ZIndexBehavior = Enum.ZIndexBehavior.Global

    local frame = Instance.new("Frame", keyUI)
    frame.AnchorPoint = Vector2.new(0.5, 0.5)
    frame.Position = UDim2.new(0.5, 0, 0.5, 0)
    frame.Size = UDim2.new(0, 300, 0, 200)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.BorderSizePixel = 0
    frame.ClipsDescendants = true
    Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 12)
    frame.Active = true
    frame.Draggable = true

    local title = Instance.new("TextLabel", frame)
    title.Size = UDim2.new(1, 0, 0, 30)
    title.Position = UDim2.new(0, 0, 0, 5)
    title.BackgroundTransparency = 1
    title.Text = "Key System"
    title.TextColor3 = color1
    title.TextSize = 22
    title.Font = font

    local textbox = Instance.new("TextBox", frame)
    textbox.Size = UDim2.new(0.9, 0, 0, 35)
    textbox.Position = UDim2.new(0.05, 0, 0, 45)
    textbox.PlaceholderText = "Enter key"
    textbox.Text = ""
    textbox.ClearTextOnFocus = true
    textbox.TextSize = 20
    textbox.TextColor3 = Color3.new(1, 1, 1)
    textbox.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    textbox.Font = font
    Instance.new("UICorner", textbox).CornerRadius = UDim.new(0, 6)

    local getBtn = Instance.new("TextButton", frame)
    getBtn.Size = UDim2.new(0.42, 0, 0, 30)
    getBtn.Position = UDim2.new(0.05, 0, 0, 90)
    getBtn.Text = "Get Key Link"
    getBtn.Font = font
    getBtn.TextSize = 16
    getBtn.TextColor3 = color1
    getBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Instance.new("UICorner", getBtn).CornerRadius = UDim.new(0, 6)

    local runBtn = Instance.new("TextButton", frame)
    runBtn.Size = UDim2.new(0.42, 0, 0, 30)
    runBtn.Position = UDim2.new(0.53, 0, 0, 90)
    runBtn.Text = "Run Key"
    runBtn.Font = font
    runBtn.TextSize = 16
    runBtn.TextColor3 = color1
    runBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Instance.new("UICorner", runBtn).CornerRadius = UDim.new(0, 6)

    local warnText = Instance.new("TextLabel", frame)
    warnText.Text = ""
    warnText.Size = UDim2.new(1, 0, 0, 20)
    warnText.Position = UDim2.new(0, 0, 1, -25)
    warnText.Font = font
    warnText.TextSize = 14
    warnText.TextColor3 = Color3.fromRGB(255, 50, 50)
    warnText.BackgroundTransparency = 1

    getBtn.MouseButton1Click:Connect(function()
        setclipboard("https://discord.gg/t6SKTqyJFN")
    end)
    
    local discord = Instance.new("TextLabel", frame)
discord.Text = "discord.gg/t6SKTqyJFN ( for the key)"
discord.Size = UDim2.new(1, 0, 0, 20)
discord.Position = UDim2.new(0, 0, 0, 150)
discord.Font = font
discord.TextSize = 14
discord.TextColor3 = Color3.new(1, 1, 1)
discord.BackgroundTransparency = 1

    runBtn.MouseButton1Click:Connect(function()
        local enteredKey = textbox.Text

        -- Free key
        if enteredKey == latestKey then
            keyData = { key = enteredKey, isPremium = false }
            saveKeyData(keyData)
            keyUI:Destroy()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/scriptholder/Blah/refs/heads/main/Hub.lua"))()

        -- Premium key
        elseif premiumKeys[enteredKey] then
            local keyInfo = premiumKeys[enteredKey]

            -- HWID lock check
            if keyInfo.hwid and keyInfo.hwid ~= HWID then
                warnText.Text = "Key already used on another device!"
                task.delay(2, function() warnText.Text = "" end)
                return
            end

            -- Save HWID + Send Webhook if first use
            if not keyInfo.hwid then
                local webhookData = {
                    ["content"] = "",
                    ["embeds"] = {{
                        ["title"] = "Premium Key Claimed",
                        ["color"] = 16711680,
                        ["fields"] = {
                            {["name"] = "Key", ["value"] = enteredKey, ["inline"] = true},
                            {["name"] = "HWID", ["value"] = HWID, ["inline"] = true},
                            {["name"] = "User", ["value"] = player.Name .. " (" .. player.UserId .. ")", ["inline"] = false}
                        }
                    }}
                }
                local jsonData = HttpService:JSONEncode(webhookData)
                local req = syn and syn.request or http_request or request
                if req then
                    req({
                        Url = WEBHOOK_URL,
                        Method = "POST",
                        Headers = {["Content-Type"] = "application/json"},
                        Body = jsonData
                    })
                else
                    warn("[DeadHub] Executor does not support webhook requests.")
                end
            end

            keyData = {
                key = enteredKey,
                isPremium = true,
                expireTime = os.time() + (keyInfo.durationDays * 86400)
            }
            saveKeyData(keyData)
            keyUI:Destroy()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/scriptholder/Blah/refs/heads/main/Hub.lua"))()

        else
            warnText.Text = "Invalid key!"
            task.delay(2, function() warnText.Text = "" end)
        end
    end)

else
    loadstring(game:HttpGet("https://raw.githubusercontent.com/scriptholder/Blah/refs/heads/main/Hub.lua"))()
end
